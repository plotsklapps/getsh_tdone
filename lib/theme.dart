// Theme config for FlexColorScheme version 7.3.x. Make sure you use
// same or higher package version, but still same major version. If you
// use a lower package version, some properties may not be supported.
// In that case remove them after copying this theme to your app.
import 'package:flex_color_scheme/flex_color_scheme.dart';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

ThemeData themeLight = FlexThemeData.light(
  scheme: FlexScheme.money,
  surfaceMode: FlexSurfaceMode.highScaffoldLowSurface,
  blendLevel: 1,
  subThemesData: const FlexSubThemesData(
    blendOnLevel: 8,
    blendOnColors: false,
    useTextTheme: true,
    thinBorderWidth: 2.0,
    thickBorderWidth: 4.0,
    defaultRadius: 12.0,
    elevatedButtonSchemeColor: SchemeColor.onPrimaryContainer,
    elevatedButtonSecondarySchemeColor: SchemeColor.primaryContainer,
    outlinedButtonOutlineSchemeColor: SchemeColor.primary,
    toggleButtonsBorderSchemeColor: SchemeColor.primary,
    segmentedButtonSchemeColor: SchemeColor.primary,
    segmentedButtonBorderSchemeColor: SchemeColor.primary,
    unselectedToggleIsColored: true,
    sliderValueTinted: true,
    sliderTrackHeight: 5,
    inputDecoratorSchemeColor: SchemeColor.primary,
    inputDecoratorBackgroundAlpha: 31,
    inputDecoratorUnfocusedHasBorder: false,
    inputDecoratorFocusedBorderWidth: 1.0,
    inputDecoratorPrefixIconSchemeColor: SchemeColor.primary,
    fabUseShape: true,
    fabAlwaysCircular: true,
    fabSchemeColor: SchemeColor.tertiary,
    popupMenuRadius: 8.0,
    popupMenuElevation: 3.0,
    alignedDropdown: true,
    useInputDecoratorThemeInDialogs: true,
    drawerIndicatorRadius: 12.0,
    drawerIndicatorSchemeColor: SchemeColor.primary,
    bottomNavigationBarMutedUnselectedLabel: false,
    bottomNavigationBarMutedUnselectedIcon: false,
    menuRadius: 8.0,
    menuElevation: 3.0,
    menuBarRadius: 0.0,
    menuBarElevation: 2.0,
    menuBarShadowColor: Color(0x00000000),
    navigationBarSelectedLabelSchemeColor: SchemeColor.primary,
    navigationBarMutedUnselectedLabel: false,
    navigationBarSelectedIconSchemeColor: SchemeColor.onPrimary,
    navigationBarMutedUnselectedIcon: false,
    navigationBarIndicatorSchemeColor: SchemeColor.primary,
    navigationBarIndicatorOpacity: 1.00,
    navigationBarIndicatorRadius: 12.0,
    navigationRailSelectedLabelSchemeColor: SchemeColor.primary,
    navigationRailMutedUnselectedLabel: false,
    navigationRailSelectedIconSchemeColor: SchemeColor.onPrimary,
    navigationRailMutedUnselectedIcon: false,
    navigationRailIndicatorSchemeColor: SchemeColor.primary,
    navigationRailIndicatorOpacity: 1.00,
    navigationRailIndicatorRadius: 12.0,
    navigationRailBackgroundSchemeColor: SchemeColor.surface,
  ),
  keyColors: const FlexKeyColors(
    useSecondary: true,
    useTertiary: true,
    keepPrimary: true,
  ),
  tones: FlexTones.jolly(Brightness.light),
  visualDensity: FlexColorScheme.comfortablePlatformDensity,
  useMaterial3: true,
// To use the Playground font, add GoogleFonts package and uncomment
  fontFamily: GoogleFonts.bebasNeue().fontFamily,
);

ThemeData themeDark = FlexThemeData.dark(
  scheme: FlexScheme.money,
  surfaceMode: FlexSurfaceMode.highScaffoldLowSurface,
  blendLevel: 8,
  subThemesData: const FlexSubThemesData(
    blendOnLevel: 10,
    blendTextTheme: true,
    useTextTheme: true,
    defaultRadius: 12.0,
    thinBorderWidth: 2.0,
    thickBorderWidth: 4.0,
    elevatedButtonSchemeColor: SchemeColor.onPrimaryContainer,
    elevatedButtonSecondarySchemeColor: SchemeColor.primaryContainer,
    outlinedButtonOutlineSchemeColor: SchemeColor.primary,
    toggleButtonsBorderSchemeColor: SchemeColor.primary,
    segmentedButtonSchemeColor: SchemeColor.primary,
    segmentedButtonBorderSchemeColor: SchemeColor.primary,
    unselectedToggleIsColored: true,
    sliderValueTinted: true,
    sliderTrackHeight: 5,
    inputDecoratorSchemeColor: SchemeColor.primary,
    inputDecoratorBackgroundAlpha: 43,
    inputDecoratorUnfocusedHasBorder: false,
    inputDecoratorFocusedBorderWidth: 1.0,
    inputDecoratorPrefixIconSchemeColor: SchemeColor.primary,
    fabUseShape: true,
    fabAlwaysCircular: true,
    fabSchemeColor: SchemeColor.tertiary,
    popupMenuRadius: 8.0,
    popupMenuElevation: 3.0,
    alignedDropdown: true,
    useInputDecoratorThemeInDialogs: true,
    drawerIndicatorRadius: 12.0,
    drawerIndicatorSchemeColor: SchemeColor.primary,
    bottomNavigationBarMutedUnselectedLabel: false,
    bottomNavigationBarMutedUnselectedIcon: false,
    menuRadius: 8.0,
    menuElevation: 3.0,
    menuBarRadius: 0.0,
    menuBarElevation: 2.0,
    menuBarShadowColor: Color(0x00000000),
    navigationBarSelectedLabelSchemeColor: SchemeColor.primary,
    navigationBarMutedUnselectedLabel: false,
    navigationBarSelectedIconSchemeColor: SchemeColor.onPrimary,
    navigationBarMutedUnselectedIcon: false,
    navigationBarIndicatorSchemeColor: SchemeColor.primary,
    navigationBarIndicatorOpacity: 1.00,
    navigationBarIndicatorRadius: 12.0,
    navigationRailSelectedLabelSchemeColor: SchemeColor.primary,
    navigationRailMutedUnselectedLabel: false,
    navigationRailSelectedIconSchemeColor: SchemeColor.onPrimary,
    navigationRailMutedUnselectedIcon: false,
    navigationRailIndicatorSchemeColor: SchemeColor.primary,
    navigationRailIndicatorOpacity: 1.00,
    navigationRailIndicatorRadius: 12.0,
    navigationRailBackgroundSchemeColor: SchemeColor.surface,
  ),
  keyColors: const FlexKeyColors(
    useSecondary: true,
    useTertiary: true,
  ),
  tones: FlexTones.jolly(Brightness.dark),
  visualDensity: FlexColorScheme.comfortablePlatformDensity,
  useMaterial3: true,
// To use the Playground font, add GoogleFonts package and uncomment
  fontFamily: GoogleFonts.bebasNeue().fontFamily,
);
// If you do not have a themeMode switch, uncomment this line
// to let the device system mode control the theme mode:
// themeMode: ThemeMode.system,

// Light and dark ColorSchemes made by FlexColorScheme v7.3.1.
// These ColorScheme objects require Flutter 3.7 or later.
const ColorScheme flexSchemeLight = ColorScheme(
  brightness: Brightness.light,
  primary: Color(0xff264e36),
  onPrimary: Color(0xffffffff),
  primaryContainer: Color(0xffa7f3c1),
  onPrimaryContainer: Color(0xff002110),
  secondary: Color(0xff797b26),
  onSecondary: Color(0xfffffbff),
  secondaryContainer: Color(0xfff4f793),
  onSecondaryContainer: Color(0xff1c1d00),
  tertiary: Color(0xff5f620e),
  onTertiary: Color(0xfffffbff),
  tertiaryContainer: Color(0xffe4e887),
  onTertiaryContainer: Color(0xff1c1d00),
  error: Color(0xffba1a1a),
  onError: Color(0xfffffbff),
  errorContainer: Color(0xffffdad6),
  onErrorContainer: Color(0xff410002),
  background: Color(0xfff8fdf5),
  onBackground: Color(0xff181d19),
  surface: Color(0xfff9fef6),
  onSurface: Color(0xff181d19),
  surfaceVariant: Color(0xffdae6da),
  onSurfaceVariant: Color(0xff3e4941),
  outline: Color(0xff6e7a70),
  outlineVariant: Color(0xffbecabe),
  shadow: Color(0xff000000),
  scrim: Color(0xff000000),
  inverseSurface: Color(0xff2c322d),
  onInverseSurface: Color(0xffedf2eb),
  inversePrimary: Color(0xff65dd99),
  surfaceTint: Color(0xff00522f),
);

const ColorScheme flexSchemeDark = ColorScheme(
  brightness: Brightness.dark,
  primary: Color(0xff65dd99),
  onPrimary: Color(0xff002110),
  primaryContainer: Color(0xff00522f),
  onPrimaryContainer: Color(0xffa7f3c1),
  secondary: Color(0xffe5e887),
  onSecondary: Color(0xff1c1d00),
  secondaryContainer: Color(0xff313300),
  onSecondaryContainer: Color(0xffe5e887),
  tertiary: Color(0xffc8cc6e),
  onTertiary: Color(0xff1c1d00),
  tertiaryContainer: Color(0xff474a00),
  onTertiaryContainer: Color(0xffe4e887),
  error: Color(0xffffb4ab),
  onError: Color(0xff410002),
  errorContainer: Color(0xff93000a),
  onErrorContainer: Color(0xffffb4ab),
  background: Color(0xff1a231d),
  onBackground: Color(0xffdfe4dd),
  surface: Color(0xff19201b),
  onSurface: Color(0xffdfe4dd),
  surfaceVariant: Color(0xff3e4b42),
  onSurfaceVariant: Color(0xffbecabe),
  outline: Color(0xff889489),
  outlineVariant: Color(0xff3e4941),
  shadow: Color(0xff000000),
  scrim: Color(0xff000000),
  inverseSurface: Color(0xffdde3db),
  onInverseSurface: Color(0xff2c322d),
  inversePrimary: Color(0xff006d40),
  surfaceTint: Color(0xff65dd99),
);
